include: container-image-jobs.yaml
include: gitlab-jobs.gitlab-ci.yml

variables:
  ENVIRONMENT_NAME_DEVELOPMENT: dev
  ENVIRONMENT_NAME_PRODUCTION: production
  ENVIRONMENT_NAME_QA: qa
  ENVIRONMENT_NAME_RELEASE: release
  ENVIRONMENT_NAME_STAGING: staging
  ENVIRONMENT_NAME_TESTING: testing
  JIRA_TICKET_PRODUCTION_PATTERN: /^DEPX-[0-9]{3,5}$/
  PIPELINE_ACTION_DEFAULT_RUN: Default run
  PIPELINE_ACTION_DEPLOY_RELEASE_TO_PRODUCTION: Deploy release to production
  SERVICE_PIPELINE_CUSTOM_JOBS: none
  # UI
  PIPELINE_ACTION:
    description: 'Default run | Deploy release to production'
    options:
    - Default run
    - Deploy release to production
    value: Default run
  JIRA_TICKET:
    description: Reference ticket. Required for production deployment.
    value: ''

workflow:
  rules:
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    when: never
  - !reference [.service pipeline, workflow rules]
  - when: always

build container image:
  extends: .build container image job
  rules:
  - if: $SERVICE_PIPELINE_CUSTOM_JOBS =~ /^build container image$/m
    when: never
  - !reference [.build container image job, rules]
  - when: on_success

production checkpoint:
  rules:
  - if: >-
      $PIPELINE_ACTION && $PIPELINE_ACTION == $PIPELINE_ACTION_DEPLOY_RELEASE_TO_PRODUCTION
      && $JIRA_TICKET =~ $JIRA_TICKET_PRODUCTION_PATTERN
  stage: .pre
  trigger:
    project: devops-private/production-deployment-gate
    strategy: depend
  variables:
    JIRA_TICKET: $JIRA_TICKET

promote container image:
  extends: .promote container image job
  rules:
  - if: $SERVICE_PIPELINE_CUSTOM_JOBS =~ /^promote container image$/m
    when: never
  - !reference [.promote container image job, rules]

deploy environment:
  extends: .deploy environment job
  rules:
  - if: $SERVICE_PIPELINE_CUSTOM_JOBS =~ /^deploy environment$/m
    when: never
  - !reference [.deploy environment job, rules]

.deploy environment job:
  extends: .trigger helm chart project job

.service pipeline:
  workflow rules:
  - if: >-
      $PIPELINE_ACTION && $PIPELINE_ACTION == $PIPELINE_ACTION_DEPLOY_RELEASE_TO_PRODUCTION
      && $CI_COMMIT_REF_NAME !~ $RELEASE_BRANCH_NAME_PATTERN
    when: never
  - if: >-
      $PIPELINE_ACTION && $PIPELINE_ACTION == $PIPELINE_ACTION_DEPLOY_RELEASE_TO_PRODUCTION
      && $JIRA_TICKET == ''
    when: never
  - if: >-
      $PIPELINE_ACTION && $PIPELINE_ACTION == $PIPELINE_ACTION_DEPLOY_RELEASE_TO_PRODUCTION
      && $JIRA_TICKET !~ $JIRA_TICKET_PRODUCTION_PATTERN
    when: never
  - !reference [.container image jobs, workflow rules]

.build container image job:
  extends: .kaniko build container image job
  rules:
  - if: >-
      $PIPELINE_ACTION && $PIPELINE_ACTION == $PIPELINE_ACTION_DEPLOY_RELEASE_TO_PRODUCTION
      && $CI_COMMIT_REF_NAME =~ $RELEASE_BRANCH_NAME_PATTERN
    when: never

.promote container image job:
  extends: .kaniko clone container image job
  rules:
  - if: >-
      $PIPELINE_ACTION && $PIPELINE_ACTION == $PIPELINE_ACTION_DEPLOY_RELEASE_TO_PRODUCTION
      && $CI_COMMIT_REF_NAME =~ $RELEASE_BRANCH_NAME_PATTERN
  script:
  - SOURCE_CONTAINER_IMAGE_NAME=${ARTIFACTORY_URL}/dkr-release/${CONTAINER_IMAGE_BASE_NAME:-$CI_PROJECT_PATH_SLUG}:${CI_COMMIT_REF_SLUG}
  - CONTAINER_IMAGE_TAG=${CI_COMMIT_REF_NAME##*/}-g${CI_COMMIT_SHORT_SHA}
  - !reference [.kaniko clone container image job, script]
  variables:
    CONTAINER_IMAGE_REGISTRY: ${ARTIFACTORY_URL}/dkr-production
    GIT_STRATEGY: none

.trigger helm chart project job:
  rules:
  - if: $CI_COMMIT_REF_NAME =~ $QA_BRANCH_NAME_PATTERN
    variables:
      DEPLOYMENT_NAME_SUFFIX: ''
      HELMFILE_ENVIRONMENT: $ENVIRONMENT_NAME_QA
  - if: >-
      $PIPELINE_ACTION && $PIPELINE_ACTION == $PIPELINE_ACTION_DEPLOY_RELEASE_TO_PRODUCTION
      && $CI_COMMIT_REF_NAME =~ $RELEASE_BRANCH_NAME_PATTERN
    variables:
      DEPLOYMENT_NAME_SUFFIX: ''
      HELMFILE_ENVIRONMENT: $ENVIRONMENT_NAME_PRODUCTION
  - if: $CI_COMMIT_REF_NAME =~ $RELEASE_BRANCH_NAME_PATTERN
    variables:
      DEPLOYMENT_NAME_SUFFIX: -g${CI_COMMIT_SHORT_SHA}
      HELMFILE_ENVIRONMENT: $ENVIRONMENT_NAME_RELEASE
      UPSTREAM_ENVIRONMENT_AUTOSTOP: 1 day
      UPSTREAM_ENVIRONMENT_NAME: ${CI_PROJECT_PATH}/${CI_COMMIT_REF_NAME}-g${CI_COMMIT_SHORT_SHA}
  - if: >-
      $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      && $CI_COMMIT_TAG == null
    variables:
      DEPLOYMENT_NAME_SUFFIX: -p${CI_PROJECT_ID}-${CI_COMMIT_REF_SLUG}
      HELMFILE_ENVIRONMENT: $ENVIRONMENT_NAME_DEVELOPMENT
      UPSTREAM_ENVIRONMENT_AUTOSTOP: 2 hours
  stage: deploy
  trigger:
    project: $HELM_CHART_PROJECT_PATH
    strategy: depend
  variables:
    HELM_CHART_APP_VERSION: $CONTAINER_IMAGE_TAG
    HELM_CHART_VERSION: "@{HELM_CHART_SOURCE_VERSION}-${CI_PROJECT_PATH_SLUG}-@{HELM_CHART_APP_VERSION}"
    UPSTREAM_COMMIT_BRANCH: $CI_COMMIT_BRANCH
    UPSTREAM_COMMIT_REF_NAME: $CI_COMMIT_REF_NAME
    UPSTREAM_COMMIT_REF_SLUG: $CI_COMMIT_REF_SLUG
    UPSTREAM_COMMIT_SHA: $CI_COMMIT_SHA
    UPSTREAM_COMMIT_SHORT_SHA: $CI_COMMIT_SHORT_SHA
    UPSTREAM_COMMIT_TAG: $CI_COMMIT_TAG
    UPSTREAM_DEFAULT_BRANCH: $CI_DEFAULT_BRANCH
    UPSTREAM_ENVIRONMENT_NAME: ${CI_PROJECT_PATH}/${CI_COMMIT_REF_NAME}

issue merge request:
  extends: .issue merge request job
  rules:
  - if: $SERVICE_PIPELINE_CUSTOM_JOBS =~ /^issue merge request$/m
    when: never
  - !reference [.issue merge request job, rules]

.issue merge request job:
  extends: .issue gitlab merge request job
  rules:
  - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    when: never
  - if: >-
      $PIPELINE_ACTION && $PIPELINE_ACTION == $PIPELINE_ACTION_DEPLOY_RELEASE_TO_PRODUCTION
      && $CI_COMMIT_REF_NAME =~ $RELEASE_BRANCH_NAME_PATTERN
  stage: .pre

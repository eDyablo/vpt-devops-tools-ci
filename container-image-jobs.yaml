variables:
  CONTAINER_IMAGE_REGISTRY_PASSWORD: ${ARTIFACTORY_PASSWORD}
  CONTAINER_IMAGE_REGISTRY_USER: ${ARTIFACTORY_USER}
  CONTAINER_IMAGE_REGISTRY: ${ARTIFACTORY_URL}/dkr
  KANIKO_IMAGE: gcr.io/kaniko-project/executor:v1.21.1-debug
  VERSION_TAG_PATTERN: ^v(0|[1-9]+)(.(0|[1-9]+)){2}($|-[0-9a-zA-Z-]+$)

.kaniko build container image job:
  stage: build
  resource_group: ${CI_COMMIT_REF_SLUG}
  image: ${KANIKO_IMAGE}
  variables:
    CONTAINER_IMAGE_BASE_NAME: ${CI_PROJECT_PATH_SLUG}
    DOCKERFILE_CONTEXT: ./
    DOCKERFILE_NAME: Dockerfile
    KANIKO_EXECUTOR: /kaniko/executor
  artifacts:
    reports:
      dotenv: build-container-image.env
  script:
  - | # Declare functions
    function list_append() {
      local list=${1}; shift
      local items=$(eval echo $"${list}")
      eval ${list}=\"${items:+${items} }${@}\"
    }
  - | # Set container image related variables
    CONTAINER_IMAGE_REPOSITORY="${CONTAINER_IMAGE_REGISTRY}/${CONTAINER_IMAGE_BASE_NAME}"
    if [ ! ${CONTAINER_IMAGE_TAG} ]; then
      if [[ "${CI_COMMIT_BRANCH}" == "${CI_DEFAULT_BRANCH}" ]]; then
        CONTAINER_IMAGE_TAG=""
      elif echo $CI_COMMIT_TAG | grep -Eq $VERSION_TAG_PATTERN; then
        CONTAINER_IMAGE_TAG=${CI_COMMIT_TAG#v}
      else
        CONTAINER_IMAGE_TAG="${CI_COMMIT_REF_SLUG}"
        list_append CONTAINER_IMAGE_LABELS com.jfrog.artifactory.retention.maxDays=7
      fi
    fi
    CONTAINER_IMAGE_NAME="${CONTAINER_IMAGE_REPOSITORY}${CONTAINER_IMAGE_TAG:+:${CONTAINER_IMAGE_TAG}}"
    list_append CONTAINER_IMAGE_LABELS \
      "org.opencontainers.image.created=$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
      "org.opencontainers.image.revision=${CI_COMMIT_SHA}" \
      "org.opencontainers.image.source=${CI_PROJECT_URL}" \
      "org.opencontainers.image.vendor=ViaPath" \
      "org.opencontainers.image.version=${CI_COMMIT_TAG:-g${CI_COMMIT_SHORT_SHA}}"
  - > # Authorize to container image registry
    echo
    "{\"auths\":{\"${CONTAINER_IMAGE_REGISTRY/\/*}\":{\"auth\":\"$(echo -n ${CONTAINER_IMAGE_REGISTRY_USER}:${CONTAINER_IMAGE_REGISTRY_PASSWORD} | base64)\"}}}"
    > /kaniko/.docker/config.json
  - > # Build and publish container image
    ${KANIKO_EXECUTOR}
    ${CONTAINER_IMAGE_NAME:+--destination=${CONTAINER_IMAGE_NAME}}
    ${DOCKERFILE_CONTEXT:+--context=${DOCKERFILE_CONTEXT}}
    ${DOCKERFILE_NAME:+--dockerfile=${DOCKERFILE_NAME}}
    $(echo "$CONTAINER_IMAGE_BUILD_ARGS" | while read build_arg; do [ "$build_arg" ] && echo "--build-arg=${build_arg}"; done)
    $(for label in ${CONTAINER_IMAGE_LABELS}; do echo --label=${label}; done)
  - | # Store variables into artifact to pass them to further jobs
    (
      echo CONTAINER_IMAGE_NAME=$CONTAINER_IMAGE_NAME
      echo CONTAINER_IMAGE_REPOSITORY=$CONTAINER_IMAGE_REPOSITORY
      echo CONTAINER_IMAGE_TAG=$CONTAINER_IMAGE_TAG
    ) >> build-container-image.env

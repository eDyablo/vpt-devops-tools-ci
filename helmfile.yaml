{{- $infrastructurePath :=
  list
    (.Values | getOrNil "rootPath")
    "infrastructure"
  | join "/" }}

{{/*
Walks through file system entries under infrastructure directory and builds
environments from it. Every subdirectory name defines an environment and
values.yaml under the subdirectory defines environment specific values that get
merged with global values. The environment values have precedence over global
values.
*/}}
{{- $environments := dict }}
{{- range $_, $entry := readDirEntries $infrastructurePath }}
  {{- if $entry.IsDir }}
    {{- $envPath := list $infrastructurePath $entry.Name | join "/" }}
    {{- $environment := dict "path" $envPath }}
    {{- $environments := set $environments $entry.Name $environment }}
  {{- end }}
{{- end }}

environments: # generated from $environments collected by the code above
  {{- range $key, $data := $environments }}
  {{ $key }}:
    values:
    - infrastructure/values.yaml
    - {{ list (get "path" $data) "values.yaml" | join "/" }}
    {{ with (env "DEPLOYMENT_NAME_PREFIX") }}
    - deploymentNamePrefix: {{ . }}
    {{- end }}
    {{ with (env "DEPLOYMENT_NAME_SUFFIX") }}
    - deploymentNameSuffix: {{ . }}
    {{- end }}
  {{- end }}

---
{{- $infrastructurePath :=
  list
    (.Values | getOrNil "rootPath")
    "infrastructure"
  | join "/" }}

{{/*
Walks through file system entries under infrastructure directory and builds
a set of helmfiles from it. Every .yaml file except values.yaml under each
subdirectory is treated as sub-helmfile.
*/}}
{{- $environments := dict }}
{{- range $_, $entry := readDirEntries $infrastructurePath }}
  {{- if $entry.IsDir }}
    {{- $envPath := list $infrastructurePath $entry.Name | join "/" }}
    {{- $deployments := dict }}
    {{- range $_, $entry := readDirEntries $envPath }}
      {{- if $entry.IsDir }}
        {{- $deploymentName := $entry.Name }}
        {{- $deployment := dict "path" (list $envPath $entry.Name "helmfile.yaml" | join "/") }}
        {{- $deployments := set $deployments $deploymentName $deployment }}
      {{- end }}
    {{- end }}
    {{- $environment := dict
      "path" $envPath
      "deployments" $deployments }}
    {{- $environments := set $environments $entry.Name $environment }}
  {{- end }}
{{- end }}

{{-
$helperTemplates := dict
"kubectl" (dict
  "getJson" (list
    `{{- $args := . }}`
    `{{- $namespace := "default" }}`
    `{{- $kind := "" }}`
    `{{- $name := "" }}`
    `{{- if eq 3 (len $args) }}`
      `{{- $namespace = index $args 0 }}`
      `{{- $args = slice $args 1 }}`
    `{{- end }}`
    `{{- if eq 2 (len $args) }}`
      `{{- $kind = index $args 0 }}`
      `{{- $name = index $args 1 }}`
    `{{- end }}`
    `{{- $cmd := list
      "kubectl"
      (list "--namespace" $namespace | join "=")
      "get" $kind $name
      "--output=json"
      "--ignore-not-found"
      | join " " }}`
    `{{- exec "sh" (list "-c" $cmd) }}`
    | join "\n" )
)
}}

helmfiles: # generated from $environments collected by the code above
  {{- $environment := $environments | getOrNil .Environment.Name | default dict }}
  {{- $deployments := $environment | getOrNil "deployments" | default dict }}
  {{- range $key, $deployment := $deployments }}
  {{- $deploymentHelmfilePath := $deployment | get "path" }}
  {{- $deploymentPath := $deploymentHelmfilePath | dir }}
  {{- $deploymentValuesPath := list $deploymentPath "values.yaml" | join "/" }}
  - path: {{ $deploymentHelmfilePath }}
    values:
    - # Pass down current context values
      {{- $.Values | toYaml | trim | nindent 6 }}
    - {{ $deploymentValuesPath }}
    - rootHelmfilePath: {{ exec "pwd" list }}
    - deploymentBaseName: {{ $key }}
    - deploymentName: {{
        list
          ($.Values | getOrNil "deploymentNamePrefix")
          $key
          ($.Values | getOrNil "deploymentNameSuffix")
        | join "" }}
    - deploymentNamespace: {{
        $.Values | getOrNil "deploymentNamespace" | default $.Environment.Name }}
    - helper:
        {{- $helperTemplates | toYaml | trim | nindent 8 }}
  {{- end }}

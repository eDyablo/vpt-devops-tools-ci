include: gitlab/jobs.gitlab-ci.yml

create release:
  extends: .get change log job
  script:
  - # Get release by tag name
    - >- # https://docs.gitlab.com/ee/api/releases/#get-a-release-by-a-tag-name | https://curl.se/docs/manpage.html
      RELEASE_URL=$(
      curl
      --header "$API_AUTHENTICATION"
      --request GET
      --silent
      "${CI_API_V4_URL}/projects/${RELEASE_PROJECT_ID}/releases/${RELEASE_TAG_NAME//\//%2F}"
      | jq -r '._links.self // empty'
      )
  - if [ -z "$RELEASE_URL" ]; then
  - # Fetch change log
    - !reference [.get change log job, script]
  - # Create release via gitlab api
    - RELEASE_NAME="$RELEASE_PROJECT_NAME release $RELEASE_REF_NAME"
    - RELEASE_REF=${RELEASE_COMMIT_ID:-$RELEASE_REF_NAME}
    #https://gitlab.gtl.net/DevOps/samples/ikva/ikva-service/-/jobs/1188992/artifacts/file/changelog
    - |-
      REQUEST_DATA="{
        \"assets\": {
          \"links\": [
            \"name\": \"Change Log\",
            \"url\": \"${CI_JOB_URL}/artifacts/file/${GIT_LOG_PATH}\"
          ]
        },
        \"description\": \"Deploying release\",
        \"name\": \"$RELEASE_NAME\",
        \"ref\": \"$RELEASE_REF\",
        \"tag_name\": \"$RELEASE_TAG_NAME\"
      }"
    - >- # https://docs.gitlab.com/ee/api/releases/#create-a-release | https://curl.se/docs/manpage.html
      curl
      --data "$REQUEST_DATA"
      --fail-with-body
      --header 'Content-Type: application/json'
      --header "$API_AUTHENTICATION"
      --request POST
      --silent
      ${CI_API_V4_URL}/projects/${RELEASE_PROJECT_ID}/releases
      | jq -r '._links.self // empty'
  - else
  - echo $RELEASE_URL
  - fi
  variables:
    API_AUTHENTICATION: 'JOB-TOKEN: $CI_JOB_TOKEN'
    RELEASE_COMMIT_ID: $CI_COMMIT_SHA
    RELEASE_PROJECT_ID: $CI_PROJECT_ID
    RELEASE_PROJECT_NAME: $CI_PROJECT_NAME
    RELEASE_REF_NAME: $CI_COMMIT_REF_NAME
    RELEASE_TAG_NAME: release/${CI_COMMIT_REF_NAME}.${CI_PIPELINE_ID}

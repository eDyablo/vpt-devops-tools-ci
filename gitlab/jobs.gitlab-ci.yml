.gitlab issue merge request job:
  image: ${ARTIFACTORY_URL}/dkr/devops-tools-plain-job-runner
  script:
  - # Get merge requests
    - >-
      MERGE_REQUEST_URL_QUERY=$(echo "
      .[]
      | select(.source_branch==\"${CI_COMMIT_REF_NAME}\"
      and .target_branch==\"${CI_DEFAULT_BRANCH}\")
      | .web_url
      ")
    - >- # https://docs.gitlab.com/ee/api/merge_requests.html#list-merge-requests | https://curl.se/docs/manpage.html
      MERGE_REQUEST_URLS=$(
      curl
      --fail-with-body
      --header "$API_AUTHENTICATION"
      --silent
      ${CI_API_V4_URL}/projects/${MERGE_REQUEST_PROJECT_ID}/merge_requests?state=opened
      | jq -r "$MERGE_REQUEST_URL_QUERY"
      )
  - # Create merge request if not exists yet
    - if [ -z "$MERGE_REQUEST_URLS" ]; then
    - |- # https://www.json.org
      CURL_DATA="{
      \"project_id\": ${MERGE_REQUEST_PROJECT_ID},
      \"remove_source_branch\": true,
      \"source_branch\": \"${MERGE_REQUEST_SOURCE_BRANCH}\",
      \"squash\": true,
      \"target_branch\": \"${MERGE_REQUEST_TARGET_BRANCH}\",
      \"title\": \"merge ${MERGE_REQUEST_SOURCE_BRANCH} to ${MERGE_REQUEST_TARGET_BRANCH}\"
      }"
    - >- # https://docs.gitlab.com/ee/api/merge_requests.html#create-mr | https://curl.se/docs/manpage.html
      curl
      --data "$CURL_DATA"
      --fail-with-body
      --header "Content-Type: application/json"
      --header "$API_AUTHENTICATION"
      --request POST
      --silent
      ${CI_API_V4_URL}/projects/${MERGE_REQUEST_PROJECT_ID}/merge_requests
      | jq -r '.web_url'
    - else
    - echo "$MERGE_REQUEST_URLS"
    - fi
  variables:
    API_AUTHENTICATION: 'JOB-TOKEN: $CI_JOB_TOKEN'
    MERGE_REQUEST_PROJECT_ID: $CI_PROJECT_ID
    MERGE_REQUEST_SOURCE_BRANCH: $CI_COMMIT_REF_NAME
    MERGE_REQUEST_TARGET_BRANCH: $CI_DEFAULT_BRANCH

.gitlab get change log job:
  artifacts:
    paths:
    - $GIT_LOG_PATH
  image: ${ARTIFACTORY_URL}/dkr/devops-tools-plain-job-runner
  script:
  - # Prepare environment
    - >-
      git config
      --global
      --add safe.directory $GIT_LOCAL_PATH
    - mkdir -p $(dirname "$GIT_LOG_PATH")
  - # Download objects for both references
    - git fetch ${GIT_FIRST_REF/\// }
    - git fetch ${GIT_SECOND_REF/\// }
  - >- # Get list of commits present in second reference but not in first
    git log ${GIT_FIRST_REF}..${GIT_SECOND_REF}
    --decorate
    --graph
    "${GIT_LOG_FORMAT:+--pretty=format:'${GIT_LOG_FORMAT}'}"
    > "$GIT_LOG_PATH"
  variables:
    GIT_FIRST_REF: origin/${CI_DEFAULT_BRANCH}
    GIT_LOCAL_PATH: ${CI_BUILDS_DIR}/${CI_PROJECT_PATH}
    GIT_LOG_FORMAT: At %ci, %cN committed %h - %s
    GIT_LOG_PATH: changelog
    GIT_SECOND_REF: origin/${CI_COMMIT_REF_NAME}
    GIT_STRATEGY: fetch

.gitlab create release job:
  extends: .gitlab get change log job
  script:
  - # Get release by tag name
    - >- # https://docs.gitlab.com/ee/api/releases/#get-a-release-by-a-tag-name | https://curl.se/docs/manpage.html
      RELEASE_URL=$(
      curl
      --header "$API_AUTHENTICATION"
      --request GET
      --silent
      "${CI_API_V4_URL}/projects/${RELEASE_PROJECT_ID}/releases/${RELEASE_TAG_NAME//\//%2F}"
      | jq -r '._links.self // empty'
      )
  - if [ -z "$RELEASE_URL" ]; then
  - # Fetch change log
    - !reference [.gitlab get change log job, script]
  - # Create release via gitlab api
    - RELEASE_NAME="$RELEASE_PROJECT_NAME release $RELEASE_REF_NAME"
    - RELEASE_REF=${RELEASE_COMMIT_ID:-$RELEASE_REF_NAME}
    #https://gitlab.gtl.net/DevOps/samples/ikva/ikva-service/-/jobs/1188992/artifacts/file/changelog
    - |-
      REQUEST_DATA="{
        \"assets\": {
          \"links\": [{
            \"name\": \"Change Log\",
            \"url\": \"${CI_JOB_URL}/artifacts/file/${GIT_LOG_PATH}\"
          }]
        },
        \"description\": \"Deploying release\",
        \"name\": \"$RELEASE_NAME\",
        \"ref\": \"$RELEASE_REF\",
        \"tag_name\": \"$RELEASE_TAG_NAME\"
      }"
    - >- # https://docs.gitlab.com/ee/api/releases/#create-a-release | https://curl.se/docs/manpage.html
      curl
      --data "$REQUEST_DATA"
      --fail-with-body
      --header 'Content-Type: application/json'
      --header "$API_AUTHENTICATION"
      --request POST
      --silent
      ${CI_API_V4_URL}/projects/${RELEASE_PROJECT_ID}/releases
      | jq -r '._links.self // empty'
  - else
  - echo $RELEASE_URL
  - fi
  variables:
    API_AUTHENTICATION: 'JOB-TOKEN: $CI_JOB_TOKEN'
    RELEASE_COMMIT_ID: $CI_COMMIT_SHA
    RELEASE_PROJECT_ID: $CI_PROJECT_ID
    RELEASE_PROJECT_NAME: $CI_PROJECT_NAME
    RELEASE_REF_NAME: $CI_COMMIT_REF_NAME
    RELEASE_TAG_NAME: ${CI_COMMIT_REF_NAME}.${CI_PIPELINE_ID}

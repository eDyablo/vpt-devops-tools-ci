include: container-image-jobs.yaml

variables:
  PIPELINE_ACTION:
    description: 'Default run | Deploy release to production'
    options:
    - Default run
    - Deploy release to production
    value: Default run
  JIRA_TICKET:
    description: Reference ticket. Required for production deployment.
    value: ''
  PIPELINE_ACTION_DEFAULT_RUN: Default run
  PIPELINE_ACTION_DEPLOY_RELEASE_TO_PRODUCTION: Deploy release to production
  PRODUCTION_JIRA_TICKET_PATTERN: /^DEPX-[0-9]{3,5}$/

.container helmfile jobs:
  workflow rules:
  - if: >-
      $PIPELINE_ACTION && $PIPELINE_ACTION == $PIPELINE_ACTION_DEPLOY_RELEASE_TO_PRODUCTION
      && $CI_COMMIT_BRANCH !~ $RELEASE_BRANCH_NAME_PATTERN
    when: never
  - if: >-
      $PIPELINE_ACTION && $PIPELINE_ACTION == $PIPELINE_ACTION_DEPLOY_RELEASE_TO_PRODUCTION
      && $JIRA_TICKET == ''
    when: never
  - if: >-
      $PIPELINE_ACTION && $PIPELINE_ACTION == $PIPELINE_ACTION_DEPLOY_RELEASE_TO_PRODUCTION
      && $JIRA_TICKET !~ $PRODUCTION_JIRA_TICKET_PATTERN
    when: never
  - !reference [.container image jobs, workflow rules]

.build container image job:
  extends: .kaniko build container image job
  rules:
  - if: >-
      $PIPELINE_ACTION && $PIPELINE_ACTION == $PIPELINE_ACTION_DEPLOY_RELEASE_TO_PRODUCTION
      && $CI_COMMIT_BRANCH =~ $RELEASE_BRANCH_NAME_PATTERN
    when: never
  - when: always

.promote release container image job:
  extends: .kaniko clone container image job
  rules:
  - if: >-
      $PIPELINE_ACTION && $PIPELINE_ACTION == $PIPELINE_ACTION_DEPLOY_RELEASE_TO_PRODUCTION
      && $CI_COMMIT_BRANCH =~ $RELEASE_BRANCH_NAME_PATTERN
  script:
  - SOURCE_CONTAINER_IMAGE_NAME=${ARTIFACTORY_URL}/dkr-release/${CONTAINER_IMAGE_BASE_NAME:-$CI_PROJECT_PATH_SLUG}:${CI_COMMIT_REF_SLUG}
  - CONTAINER_IMAGE_TAG=${CI_COMMIT_BRANCH##*/}-g${CI_COMMIT_SHORT_SHA}
  - !reference [.kaniko clone container image job, script]
  variables:
    CONTAINER_IMAGE_REGISTRY: ${ARTIFACTORY_URL}/dkr-production
    GIT_STRATEGY: none

.trigger helm chart project job:
  rules:
  - if: $CI_COMMIT_BRANCH =~ $QA_BRANCH_NAME_PATTERN
    variables:
      DEPLOYMENT_NAME_SUFFIX: ''
      HELMFILE_ENVIRONMENT: qa
  - if: >-
      $PIPELINE_ACTION && $PIPELINE_ACTION == $PIPELINE_ACTION_DEPLOY_RELEASE_TO_PRODUCTION
      && $CI_COMMIT_BRANCH =~ $RELEASE_BRANCH_NAME_PATTERN
    variables:
      DEPLOYMENT_NAME_SUFFIX: ''
      HELMFILE_ENVIRONMENT: production
  - if: $CI_COMMIT_BRANCH =~ $RELEASE_BRANCH_NAME_PATTERN
    variables:
      DEPLOYMENT_NAME_SUFFIX: -g${CI_COMMIT_SHORT_SHA}
      HELMFILE_ENVIRONMENT: release
      UPSTREAM_ENVIRONMENT_AUTOSTOP: 1 day
      UPSTREAM_ENVIRONMENT_NAME: ${CI_PROJECT_PATH}/${CI_COMMIT_BRANCH}-g${CI_COMMIT_SHORT_SHA}
  - if: >-
      $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      && $CI_COMMIT_TAG == null
    variables:
      DEPLOYMENT_NAME_SUFFIX: -p${CI_PROJECT_ID}-${CI_COMMIT_REF_SLUG}
      HELMFILE_ENVIRONMENT: dev
      UPSTREAM_ENVIRONMENT_AUTOSTOP: 2 hours
  stage: deploy
  trigger:
    project: $HELM_CHART_PROJECT_PATH
    strategy: depend
  variables:
    HELM_CHART_APP_VERSION: $CI_COMMIT_REF_SLUG
    HELM_CHART_VERSION: "@{HELM_CHART_SOURCE_VERSION}-${CI_PROJECT_PATH_SLUG}-${CI_COMMIT_REF_SLUG}"
    UPSTREAM_ENVIRONMENT_NAME: ${CI_PROJECT_PATH}/${CI_COMMIT_REF_NAME}
